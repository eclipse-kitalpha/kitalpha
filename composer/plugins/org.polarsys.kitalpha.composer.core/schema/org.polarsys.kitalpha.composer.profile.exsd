<?xml version='1.0' encoding='UTF-8'?>
<!--
Copyright (c) 2014, 2020 Thales Global Services S.A.S.
 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License 2.0 which is available at
 http://www.eclipse.org/legal/epl-2.0

 SPDX-License-Identifier: EPL-2.0

Contributors:
 Thales Global Services S.A.S - initial API and implementation
-->
<!-- Schema file written by PDE -->
<schema targetNamespace="org.polarsys.kitalpha.composer.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.polarsys.kitalpha.composer.core" id="org.polarsys.kitalpha.composer.profile" name="composerProfile"/>
      </appInfo>
      <documentation>
         This extension point allows to define composer profile. A profile is a structure that describes a generation plan with composer. It includes:
&lt;ul&gt;
&lt;li&gt;Allocation Ns URI&lt;/li&gt;
&lt;li&gt;Binding Id&lt;/li&gt;
&lt;li&gt;Strategy and its parameters&lt;/li&gt;
&lt;li&gt;Refinery and its parameters&lt;/li&gt;
&lt;li&gt;Generator and its parameters&lt;/li&gt;
&lt;li&gt;Cadence activities and their parameters&lt;/li&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="composerProfile" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="composerProfile">
      <annotation>
         <documentation>
            Describes a generation plan.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="strategy"/>
            <element ref="refinery"/>
            <element ref="generator"/>
            <element ref="beforeStrategyActivities" minOccurs="0" maxOccurs="1"/>
            <element ref="beforeRefineryActivities" minOccurs="0" maxOccurs="1"/>
            <element ref="beforeGeneratorActivities" minOccurs="0" maxOccurs="1"/>
            <element ref="afterGeneratorActivities" minOccurs="0" maxOccurs="1"/>
            <element ref="libraries" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The unique identifier for this generation plan.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the generation plan. It will be used by UI.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="allocationNsUri" type="string" use="required">
            <annotation>
               <documentation>
                  The namespace URI of the allocation metamodel.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="bindingId" type="string" use="required">
            <annotation>
               <documentation>
                  The generation binding corresponding for this profile. the id is defined in the binding extension point.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="strategy">
      <annotation>
         <documentation>
            Defines the strategy used by the generation plan.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  Id of the strategy.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="refinery">
      <annotation>
         <documentation>
            Defines the refinery used by the generation plan.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  Id of the refinery.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="generator">
      <annotation>
         <documentation>
            Defines the generator used by the generation plan.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  Id of the generator.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="beforeStrategyActivities">
      <annotation>
         <documentation>
            Defines the activities to execute before the strategy.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="activity" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="beforeRefineryActivities">
      <complexType>
         <sequence>
            <element ref="activity" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="beforeGeneratorActivities">
      <annotation>
         <documentation>
            Defines the activities to execute before the generator.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="activity" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="afterGeneratorActivities">
      <annotation>
         <documentation>
            Defines the activities to execute after the generator.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="activity" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="parameter">
      <annotation>
         <documentation>
            Defines a parameter (name := value)
         </documentation>
      </annotation>
      <complexType>
         <attribute name="parameterName" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the parameter.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="parameterValue" type="string" use="required">
            <annotation>
               <documentation>
                  The value of the parameter.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="activity">
      <annotation>
         <documentation>
            Defines a cadence activity to execute.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  The id of the activity to execute.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="libraries">
      <complexType>
         <sequence>
            <element ref="library" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="library">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         Composer 5.0.0
      </documentation>
   </annotation>




   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2014, 2020 Thales Global Services S.A.S.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  http://www.eclipse.org/legal/epl-v10.html
 
 Contributors:
  Thales Global Services S.A.S - initial API and implementation
      </documentation>
   </annotation>

</schema>
