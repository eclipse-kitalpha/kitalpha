/*******************************************************************************
 * Copyright (c) 2014, 2020 Thales Global Services S.A.S.
 *  This program and the accompanying materials are made available under the
 *  terms of the Eclipse Public License 2.0 which is available at
 *  http://www.eclipse.org/legal/epl-2.0
 *  
 *  SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *  Thales Global Services S.A.S - initial API and implementation
 ******************************************************************************/
 /**
 * 
 * @author Amine Lajmi
 * @author Faycal Abka
 *
 */
grammar org.polarsys.kitalpha.ad.viewpoint.dsl.cs.text.Vpui with org.polarsys.kitalpha.ad.viewpoint.dsl.cs.text.Common

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.polarsys.org/kitalpha/ad/viewpoint/dsl/as/vpui/1.0.0" as vpui
import "http://www.polarsys.org/kitalpha/ad/viewpoint/dsl/as/vpdesc/1.0.0" as vpdesc

generate ui "http://www.polarsys.org/kitalpha/ad/viewpoint/dsl/cs/text/vpui/1.0.0"

UserInterface returns UserInterface:
	{UserInterface}
	(imports+=Import)*
	(uiDescription=Aspect)
;

Import:
	'import' importedNamespace=FQN
;

Aspect returns vpdesc::Aspect:
	UIDescription	
;
/********************************************************************
 * 							vpui
 * 
 ********************************************************************/
UIDescription returns vpdesc::Aspect:
	{vpui::UIDescription}
	'UIDescription' name=FQN '{'
	 	(=> UIs+=UI)*
	 '}'
	;

DisplayableElement returns vpui::DisplayableElement:
	UIContainer | UI | UIField
	;

UI returns vpui::UI:
	{vpui::UI}
	'UI' (name=EString)? (UI_DataSource=DataSource)?
	'{'	
		('label:' label=EString)?
		(UI_Containers+=UIContainer)*
	'}';

UIContainer returns vpui::UIContainer:
	{vpui::UIContainer}
	'Container' (name=EString)? '{'
		('label:' label=EString )?
		('description:' description=EString)?
		(UI_fields+=UIField (UI_fields+=UIField)*)?
		(subContainers+=UIContainer (subContainers+=UIContainer)*)?
		'}'
	;

DataSource returns vpui::DataSource: 
	LocalClass
;

LocalClass returns vpui::DataSource:
	{vpui::LocalClass}
	'for' UI_For_LocalClass=[vpdesc::Class|FQN]
;

UIField returns vpui::UIField:
	{vpui::UIField}
	'Field' name=EString
		('label:' label=EString )?
		('description:' description=EString ',')?
		('type' type=UI_Field_Type)? ','
		Mapping=FieldMapping
	;

FieldMapping returns vpui::FieldMapping:
	{vpui::FieldMapping}
	'mapped-to' (UI_Field_Mapped_To=[vpdesc::AbstractFeature|FQN])?;  
	//added ()? to get correct parsing until this step, fix later by validation rule

enum UI_Field_Type returns vpui::UI_Field_Type:
	text='text' | 
	textarea='textarea' | 
	checkbox='checkbox' | 
	radiobox='radiobox' | 
	simpleChoiceList='simpleChoiceList' | 
	multipleChoiceList='multipleChoiceList'|
	richtext = 'richtext';